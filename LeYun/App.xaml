<Application x:Class="LeYun.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:LeYun" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
             xmlns:custom="clr-namespace:WPFCustomControls;assembly=WPFCustomControls"
             xmlns:viewmodel="clr-namespace:LeYun.ViewModel" 
             xmlns:dlg="clr-namespace:LeYun.ViewModel.Dlg" 
             xmlns:model="clr-namespace:LeYun.Model" xmlns:commonconverter="clr-namespace:LeYun.Model.CommonConverter"
             StartupUri="View/Dialog/Splash.xaml">

    <!--StartupUri="View/MainWindow.xaml"-->
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    
                    <!--转换器-->
                    <commonconverter:BoolToVisibility x:Key="BoolToVisibility"/>
                    <viewmodel:NodeButtonMarginConverter x:Key="nodeButtonMarginConverter"/>
                    <viewmodel:NodeButtonXConverter x:Key="nodeButtonXConverter"/>
                    <viewmodel:NodeButtonYConverter x:Key="nodeButtonYConverter"/>
                    <viewmodel:LineColorConverter x:Key="lineColorConverter"/>
                    <viewmodel:NodeButtonColorConverter x:Key="nodeButtonColorConverter"/>
                    <viewmodel:CreateTimeConverter x:Key="createTimeConverter"/>
                    <viewmodel:PathConverter x:Key="PathConverter"/>
                    <viewmodel:SearchResultVisibilityConverter x:Key="searchResultVisibilityConverter"/>
                    <viewmodel:NotConverter x:Key="notConverter"/>
                    <viewmodel:IsVisibleConverter x:Key="isVisibleConverter"/>
                    <dlg:Times100 x:Key="times100"/>
                    <dlg:XRangeConverter x:Key="xRangeConverter"/>
                    <dlg:YRangeConverter x:Key="yRangeConverter"/>

                    <!--画刷-->
                    <SolidColorBrush Color="#226ad1" x:Key="ThemeColor"/>
                    <SolidColorBrush Color="#1e5ab3" x:Key="ThemeColorDark"/>
                    <SolidColorBrush Color="#387cdf" x:Key="ThemeColorLight"/>
                    <SolidColorBrush Color="#ffffff" x:Key="TextColorLight"/>
                    <SolidColorBrush Color="#000000" x:Key="TextColorDark"/>
                    <SolidColorBrush Color="#a4a4a4" x:Key="TextColorGray"/>
                    <SolidColorBrush Color="#808080" x:Key="DisableColor"/>
                    <SolidColorBrush Color="#fff1f0" x:Key="ErrorColor"/>


                    <!--阴影窗口样式-->
                    <Style x:Key="ShadowWindowStyle" TargetType="{x:Type Window}">
                        <Setter Property="AllowsTransparency" Value="true"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="ResizeMode" Value="NoResize"/>
                        <Setter Property="WindowStyle" Value="None"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Window}">
                                    <Grid Margin="10">
                                        <Rectangle Fill="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                            <Rectangle.Effect>
                                                <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="0.5"/>
                                            </Rectangle.Effect>
                                        </Rectangle>
                                        <Border Background="{TemplateBinding Background}"  
                                    BorderBrush="{TemplateBinding BorderBrush}"  
                                    BorderThickness="{TemplateBinding BorderThickness}"  
                                    Padding="{TemplateBinding Margin}"  
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                            <ContentPresenter />
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!--具有弹出动画的窗口-->
                    <Style x:Key="WindowLoadAnimationStyle" TargetType="{x:Type Window}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Window}">
                                    <Grid Margin="10" RenderTransformOrigin="0.5 0.5">
                                        <!--缩放变换-->
                                        <Grid.RenderTransform>
                                            <ScaleTransform x:Name="scale" ScaleX="0" ScaleY="0"/>
                                        </Grid.RenderTransform>
                                        <Rectangle Fill="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                            <Rectangle.Effect>
                                                <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="0.5"/>
                                            </Rectangle.Effect>
                                        </Rectangle>
                                        <Border Background="{TemplateBinding Background}"  
                                    BorderBrush="{TemplateBinding BorderBrush}"  
                                    BorderThickness="{TemplateBinding BorderThickness}"  
                                    Padding="{TemplateBinding Margin}"  
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                            <ContentPresenter />
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <!--窗口弹出动画-->
                                        <EventTrigger RoutedEvent="Window.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="scale" From="0" To="1">
                                                        <DoubleAnimation.EasingFunction>
                                                            <CircleEase />
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="scale" From="0" To="1">
                                                        <DoubleAnimation.EasingFunction>
                                                            <CircleEase />
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!--具有弹出动画的窗口，且不带边框和阴影-->
                    <Style x:Key="WindowLoadAnimationStyleWithoutShadow" TargetType="{x:Type Window}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Window}">
                                    <Grid RenderTransformOrigin="0.5 0.5">
                                        <!--缩放变换-->
                                        <Grid.RenderTransform>
                                            <ScaleTransform x:Name="scale" ScaleX="0" ScaleY="0"/>
                                        </Grid.RenderTransform>
                                        <Border Background="{TemplateBinding Background}"  
                                    BorderBrush="{TemplateBinding BorderBrush}"  
                                    BorderThickness="{TemplateBinding BorderThickness}"  
                                    Padding="{TemplateBinding Margin}"  
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                            <ContentPresenter />
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <!--窗口弹出动画-->
                                        <EventTrigger RoutedEvent="Window.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.3" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="scale" From="0" To="1">
                                                        <DoubleAnimation.EasingFunction>
                                                            <CircleEase />
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                    <DoubleAnimation Duration="0:0:0.3" Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="scale" From="0" To="1">
                                                        <DoubleAnimation.EasingFunction>
                                                            <CircleEase />
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!--文本居中的文本框样式-->
                    <Style x:Key="CenterAlignTextBlock" TargetType="TextBlock">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="FontSize" Value="16"/>
                    </Style>

                    <!--用于绘制字体图标的文本框样式-->
                    <Style x:Key="IconTextBlock" TargetType="TextBlock">
                        <Setter Property="FontFamily" Value="../Font/#FontAwesome"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="FontSize" Value="18"/>
                    </Style>

                    <!--链接文本样式-->
                    <Style x:Key="LinkTextStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CenterAlignTextBlock}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="TextDecorations" Value="Underline"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <!--窗口标题栏关闭按钮样式-->
                    <Style x:Key="TitleBarCloseButtonStyle" TargetType="{x:Type Button}">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="HorizontalAlignment" Value="Right"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="FontSize" Value="22"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="border" Background="Transparent">
                                        <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf00d;" Foreground="White" FontSize="{TemplateBinding FontSize}" Margin="10 5 10 5"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#e81123" TargetName="border"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!--窗口标题栏最小化按钮样式-->
                    <Style x:Key="TitleBarMinimizeButtonStyle" TargetType="{x:Type Button}">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="HorizontalAlignment" Value="Right"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="FontSize" Value="22"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="border" Background="Transparent">
                                        <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf068;" Foreground="White" FontSize="{TemplateBinding FontSize}" Margin="10 5 10 5"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{StaticResource ThemeColorDark}" TargetName="border"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!--普通按钮样式-->
                    <Style x:Key="ButtonStyle" TargetType="Button">
                        <Setter Property="Background" Value="{StaticResource ThemeColor}"/>
                        <Setter Property="Foreground" Value="{StaticResource TextColorLight}"/>
                        <Setter Property="Width" Value="100"/>
                        <Setter Property="Height" Value="30"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Opacity" Value="0.9"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Opacity" Value="0.8"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" Value="{StaticResource DisableColor}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!--CheckBox样式-->
                    <!--<Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type CheckBox}">
                                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" x:Name="box" Style="{StaticResource IconTextBlock}" Text="&#xf096;" FontSize="{TemplateBinding FontSize}" Foreground="{StaticResource ThemeColor}" Margin="5 0 5 0"/>
                                        <TextBlock Grid.Column="1" x:Name="content" Text="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Opacity" Value="0.8"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="TextBlock.Text" Value="&#xf046;" TargetName="box"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>-->

                    <!--ToggleButton样式-->
                    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Grid Background="Transparent" SnapsToDevicePixels="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock x:Name="toggle" Grid.Column="0" Style="{StaticResource IconTextBlock}" Text="&#xf204;" Foreground="{StaticResource ThemeColor}" FontSize="30" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0 0 5 0"/>
                                        <TextBlock x:Name="content" Grid.Column="1" Text="{TemplateBinding Content}" Foreground="{StaticResource TextColorDark}" FontSize="{TemplateBinding FontSize}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="TextBlock.Text" Value="&#xf205;" TargetName="toggle"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="TextBlock.Opacity" Value="0.8" TargetName="toggle"/>
                                            <Setter Property="TextBlock.Opacity" Value="0.8" TargetName="content"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!--编辑框样式-->
                    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TextBox}">
                                    <Border x:Name="border" BorderBrush="{StaticResource ThemeColor}" BorderThickness="0 0 0 2" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                        <ScrollViewer BorderThickness="0" x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                            <Setter Property="Foreground" Value="{StaticResource DisableColor}"/>
                                        </Trigger>
                                        <Trigger Property="IsReadOnly" Value="True">
                                            <Setter Property="Foreground" Value="{StaticResource DisableColor}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ThemeColorLight}"/>
                                        </Trigger>
                                        <!--校验失败时-->
                                        <Trigger Property="Validation.HasError" Value="true">
                                            <Setter TargetName="border" Property="BorderBrush" Value="#de5448"/>
                                            <Setter TargetName="border" Property="Background" Value="{StaticResource ErrorColor}"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Validation.ErrorTemplate">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border x:Name="border" BorderBrush="#d84c3f" BorderThickness="0 0 0 2" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                        <ScrollViewer BorderThickness="0" x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!--搜索编辑框样式-->
                    <Style x:Key="SearchTextBoxStyle" TargetType="{x:Type TextBox}">
                        <Setter Property="Height" Value="30"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TextBox}">
                                    <Border x:Name="border" BorderBrush="{StaticResource ThemeColor}" BorderThickness="2" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Border x:Name="icon" Background="{StaticResource ThemeColor}" Margin="0 0 5 0">
                                                <TextBlock Style="{StaticResource IconTextBlock}" Foreground="{StaticResource TextColorLight}" Text="&#xf002;" Margin="5 0 5 0"/>
                                            </Border>
                                            <TextBlock x:Name="hint" Grid.Column="1" Style="{StaticResource CenterAlignTextBlock}" Text="按名称查找" Foreground="{StaticResource TextColorGray}" HorizontalAlignment="Left" Visibility="Hidden"/>
                                            <ScrollViewer Grid.Column="1" x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" VerticalAlignment="Center"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Text" Value="{x:Null}">
                                            <Setter TargetName="hint" Property="Visibility" Value="Visible"/>
                                        </Trigger>
                                        <Trigger Property="Text" Value="">
                                            <Setter TargetName="hint" Property="Visibility" Value="Visible"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"/>
                                            <Setter TargetName="icon" Property="Background" Value="Gray"/>
                                            <Setter TargetName="hint" Property="Text" Value="搜索功能不可用"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!--组合框下拉按钮样式-->
                    <Style x:Key="ComboBoxToggleStyle" TargetType="{x:Type ToggleButton}">
                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                        <Setter Property="IsTabStop" Value="false"/>
                        <Setter Property="Focusable" Value="false"/>
                        <Setter Property="ClickMode" Value="Press"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border x:Name="border" UseLayoutRounding="True" BorderBrush="{StaticResource ThemeColor}" BorderThickness="1">
                                        <Grid UseLayoutRounding="True">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Border UseLayoutRounding="True" Grid.Column="0" Background="White"/>
                                            <Border x:Name="drop" UseLayoutRounding="True" Grid.Column="1" Background="{StaticResource ThemeColor}"/>
                                            <TextBlock Grid.Column="1" Style="{StaticResource IconTextBlock}" FontSize="{TemplateBinding FontSize}" Text="&#xf078;" Foreground="{StaticResource TextColorLight}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5 0 5 0"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Opacity" Value="0.9"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Opacity" Value="0.8"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="drop" Property="Background" Value="{StaticResource DisableColor}"/>
                                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource DisableColor}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!--组合框样式-->
                    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
                        <Style.Resources>
                            <Style TargetType="{x:Type ScrollBar}" BasedOn="{x:Null}" />
                        </Style.Resources>

                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ComboBox}">
                                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                        </Grid.ColumnDefinitions>
                                        <!--下拉框-->
                                        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                            <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                                            </Canvas>
                                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        </Grid>
                                                    </ScrollViewer>
                                                </Border>
                                            </Themes:SystemDropShadowChrome>
                                        </Popup>
                                        <!--下拉按钮-->
                                        <ToggleButton Foreground="{StaticResource TextColorLight}" x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleStyle}"/>
                                        <!--选择内容-->
                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!--ListViewItem样式-->
                    <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
                        <Setter Property="Foreground" Value="#767676" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="MinHeight" Value="25" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Padding" Value="3,0,0,0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border x:Name="Bd" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Padding="5">
                                        <Grid x:Name="PART_Root" Margin="{TemplateBinding Padding}">
                                            <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                            <ContentPresenter x:Name="contentPresenter" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed" />
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Bd" Property="Background" Value="#f5f5f5" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="Bd" Property="Background" Value="#e6e6e6" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!--GridViewColumnHeader样式-->
                    <Style x:Key="GridViewColumnHeaderStyle" TargetType="GridViewColumnHeader">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Setter Property="Foreground" Value="#606060" />
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="Height" Value="Auto"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="GridViewColumnHeader">
                                    <Grid>
                                        <Border x:Name="HeaderBorder" Padding="{TemplateBinding Padding}" Background="White">
                                            <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="{TemplateBinding Content}" Margin="5" FontSize="14"/>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <TextBlock TextBlock.FontWeight="Normal" Text="{Binding}" />
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!--滚动条样式-->
                    <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
                        <Style.Resources>
                            <!--滑块样式-->
                            <Style TargetType="{x:Type Thumb}">
                                <Setter Property="Opacity" Value="0.8"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                            <Border x:Name="bar" Background="#c1c1c1" CornerRadius="5"/>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Opacity" Value="1.0"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <!--透明repeat按钮-->
                            <Style x:Key="TransparentRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                            <Border Background="Transparent">

                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.Resources>
                        <Style.Triggers>
                            <!--垂直滚动条-->
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="MinWidth" Value="0"/>
                                <Setter Property="Width" Value="10"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                                            <Grid Background="Transparent">
                                                <Border x:Name="border" Background="Transparent"/>
                                                <Track x:Name="PART_Track" IsDirectionReversed="True" >
                                                    <!--滑块以下部分-->
                                                    <Track.DecreaseRepeatButton>
                                                        <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource TransparentRepeatButtonStyle}"/>
                                                    </Track.DecreaseRepeatButton>
                                                    <!--滑块以上部分-->
                                                    <Track.IncreaseRepeatButton>
                                                        <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource TransparentRepeatButtonStyle}"/>
                                                    </Track.IncreaseRepeatButton>
                                                    <!--滑块-->
                                                    <Track.Thumb>
                                                        <Thumb x:Name="thumb" Width="3"/>
                                                    </Track.Thumb>
                                                </Track>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <!--鼠标移到滚动条上时显示滑块，离开时隐藏滑块-->
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#f0f0f0" TargetName="border"/>
                                                </Trigger>
                                                <EventTrigger RoutedEvent="MouseEnter">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0:0:0.15" Storyboard.TargetName="thumb" Storyboard.TargetProperty="Width" From="3" To="10"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                                <EventTrigger RoutedEvent="MouseLeave">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0:0:0.15" Storyboard.TargetName="thumb" Storyboard.TargetProperty="Width" From="10" To="3"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <!--水平滚动条-->
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter Property="MinHeight" Value="0"/>
                                <Setter Property="Height" Value="10"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                                            <Grid>
                                                <Border x:Name="border" Background="Transparent"/>
                                                <Track x:Name="PART_Track" IsDirectionReversed="False">
                                                    <!--滑块以左部分-->
                                                    <Track.DecreaseRepeatButton>
                                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource TransparentRepeatButtonStyle}"/>
                                                    </Track.DecreaseRepeatButton>
                                                    <!--滑块以右部分-->
                                                    <Track.IncreaseRepeatButton>
                                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource TransparentRepeatButtonStyle}"/>
                                                    </Track.IncreaseRepeatButton>
                                                    <!--滑块-->
                                                    <Track.Thumb>
                                                        <Thumb x:Name="thumb" Height="3"/>
                                                    </Track.Thumb>
                                                </Track>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <!--鼠标移到滚动条上时显示滑块，离开时隐藏滑块-->
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#f0f0f0" TargetName="border"/>
                                                </Trigger>
                                                <EventTrigger RoutedEvent="MouseEnter">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0:0:0.15" Storyboard.TargetName="thumb" Storyboard.TargetProperty="Height" From="3" To="10"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                                <EventTrigger RoutedEvent="MouseLeave">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0:0:0.15" Storyboard.TargetName="thumb" Storyboard.TargetProperty="Height" From="10" To="3"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <!--右键菜单样式-->
                    <Style x:Key="ContextMenuStyle" TargetType="{x:Type ContextMenu}">
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="OverridesDefaultStyle" Value="True" />
                        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                        <Setter Property="HasDropShadow" Value="True" />
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="ItemContainerStyle">
                            <Setter.Value>
                                <Style TargetType="{x:Type MenuItem}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                                <Border x:Name="border" Background="White" Width="Auto" Height="Auto" Margin="0" Padding="20 5 20 5">
                                                    <ContentPresenter ContentSource="Header" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#c8c8c9" TargetName="border"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ContextMenu}">
                                    <Grid Margin="10" Background="White">
                                        <Rectangle Fill="White" RadiusX="0" RadiusY="0">
                                            <Rectangle.Effect>
                                                <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="0.5"/>
                                            </Rectangle.Effect>
                                        </Rectangle>
                                        <Border x:Name="Border" Background="White" Margin="0 5 0 5">
                                            <StackPanel IsItemsHost="True"/>
                                        </Border>
                                    </Grid>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!--DataGrid样式-->
                    <Style x:Key="DataGridCellContentStyle" TargetType="{x:Type TextBlock}">
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="TextWrapping" Value="Wrap"/>
                        <Setter Property="FontSize" Value="12"/>
                    </Style>

                    <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
                        <Setter Property="SelectionMode" Value="Single"/>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        <Setter Property="IsReadOnly" Value="True"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="HeadersVisibility" Value="Column"/>
                        <Setter Property="AutoGenerateColumns" Value="False"/>
                        <Setter Property="CanUserAddRows" Value="True"/>
                        <Setter Property="VerticalGridLinesBrush" Value="Transparent"/>
                        <Setter Property="HorizontalGridLinesBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <!--<Setter Property="EnableRowVirtualization" Value="True"/>
                        <Setter Property="EnableColumnVirtualization" Value="True"/>-->
                        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
                        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"/>
                        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />

                        <Setter Property="ColumnHeaderStyle">
                            <Setter.Value>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Setter Property="FontSize" Value="15"/>
                                    <Setter Property="Foreground" Value="#838383"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Height" Value="35"/>
                                </Style>
                            </Setter.Value>
                        </Setter>

                        <Setter Property="RowStyle">
                            <Setter.Value>
                                <Style TargetType="{x:Type DataGridRow}">
                                    <Setter Property="Height" Value="40"/>
                                    <Setter Property="Foreground" Value="#959595"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    <Setter Property="BorderThickness" Value="0 1 0 0"/>
                                    <Setter Property="BorderBrush" Value="#f7f7f7"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#f5f5f5"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="#e6e6e6"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Setter.Value>
                        </Setter>

                        <Setter Property="CellStyle">
                            <Setter.Value>
                                <Style TargetType="{x:Type DataGridCell}">
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Foreground" Value="#959595"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!--配送节点按钮样式-->
                    <Style x:Key="NodeButtonStyle" TargetType="{x:Type Thumb}">
                        <Setter Property="Width" Value="15"/>
                        <Setter Property="Height" Value="15"/>
                        <Setter Property="Background" Value="{StaticResource ThemeColor}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Grid>
                                        <Border x:Name="border" 
                                                Background="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Width}" CornerRadius="{Binding Width, RelativeSource={RelativeSource Mode=Self}}">
                                            <Border.Effect>
                                                <DropShadowEffect ShadowDepth="-4" BlurRadius="5" Color="LightGray"/>
                                            </Border.Effect>
                                        </Border>
                                        <Border x:Name="dark" Background="Black" Opacity="0"
                                                Width="{TemplateBinding Width}" Height="{TemplateBinding Width}" CornerRadius="{Binding Width, RelativeSource={RelativeSource Mode=Self}}"/>
                                    </Grid>
                                    
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="dark" Property="Opacity" Value="0.2"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!--滑动条样式-->
                    <SolidColorBrush x:Key="SliderThumb.Static.Foreground" Color="#FFE5E5E5"/>
                    <SolidColorBrush x:Key="SliderThumb.MouseOver.Background" Color="#FFDCECFC"/>
                    <SolidColorBrush x:Key="SliderThumb.MouseOver.Border" Color="#FF7Eb4EA"/>
                    <SolidColorBrush x:Key="SliderThumb.Pressed.Background" Color="#FFDAECFC"/>
                    <SolidColorBrush x:Key="SliderThumb.Pressed.Border" Color="#FF569DE5"/>
                    <SolidColorBrush x:Key="SliderThumb.Disabled.Background" Color="#FFF0F0F0"/>
                    <SolidColorBrush x:Key="SliderThumb.Disabled.Border" Color="#FFD9D9D9"/>
                    <SolidColorBrush x:Key="SliderThumb.Static.Background" Color="#FFF0F0F0"/>
                    <SolidColorBrush x:Key="SliderThumb.Static.Border" Color="#FFACACAC"/>
                    <ControlTemplate x:Key="SliderThumbHorizontalTop" TargetType="{x:Type Thumb}">
                        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                            <Path x:Name="grip" Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <ControlTemplate x:Key="SliderThumbHorizontalBottom" TargetType="{x:Type Thumb}">
                        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                            <Path x:Name="grip" Data="M 0,12 C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <SolidColorBrush x:Key="SliderThumb.Track.Border" Color="#FFD6D6D6"/>
                    <SolidColorBrush x:Key="SliderThumb.Track.Background" Color="#FFE7EAEA"/>
                    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Focusable" Value="false"/>
                        <Setter Property="IsTabStop" Value="false"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
                        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                            <Path x:Name="grip" Data="M 0,0 C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0 z" Fill="#387cdf" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="0" UseLayoutRounding="True" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>-->
                                <Setter Property="Fill" Value="#1e5ab3" TargetName="grip"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <!--<Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>-->
                                <Setter Property="Fill" Value="#1e5ab3" TargetName="grip"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                                <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                                <Border x:Name="TrackBackground" BorderBrush="{StaticResource SliderThumb.Track.Border}" BorderThickness="1" Background="{StaticResource SliderThumb.Track.Background}" Height="4.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center">
                                    <Canvas Margin="-6,-1">
                                        <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Visibility="Hidden"/>
                                    </Canvas>
                                </Border>
                                <Track x:Name="PART_Track" Grid.Row="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Focusable="False" Height="18" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbHorizontalDefault}" VerticalAlignment="Center" Width="11"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TickPlacement" Value="TopLeft">
                                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalTop}"/>
                                <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="BottomRight">
                                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalBottom}"/>
                                <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="Both">
                                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <ControlTemplate x:Key="SliderThumbVerticalLeft" TargetType="{x:Type Thumb}">
                        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                            <Path x:Name="grip" Data="M 6,11 C6,11 0,5.5 0,5.5 0,5.5 6,0 6,0 6,0 18,0 18,0 18,0 18,11 18,11 18,11 6,11 6,11 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <ControlTemplate x:Key="SliderThumbVerticalRight" TargetType="{x:Type Thumb}">
                        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                            <Path x:Name="grip" Data="M 12,11 C12,11 18,5.5 18,5.5 18,5.5 12,0 12,0 12,0 0,0 0,0 0,0 0,11 0,11 0,11 12,11 12,11 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <ControlTemplate x:Key="SliderThumbVerticalDefault" TargetType="{x:Type Thumb}">
                        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                            <Path x:Name="grip" Data="M0.5,0.5 L18.5,0.5 18.5,11.5 0.5,11.5z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <ControlTemplate x:Key="SliderVertical" TargetType="{x:Type Slider}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="4"/>
                                <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="4"/>
                                <Border x:Name="TrackBackground" BorderBrush="{StaticResource SliderThumb.Track.Border}" BorderThickness="1" Background="{StaticResource SliderThumb.Track.Background}" Grid.Column="1" HorizontalAlignment="center" Margin="0,5" Width="4.0">
                                    <Canvas Margin="-1,-6">
                                        <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Visibility="Hidden" Width="4.0"/>
                                    </Canvas>
                                </Border>
                                <Track x:Name="PART_Track" Grid.Column="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Focusable="False" Height="11" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbVerticalDefault}" VerticalAlignment="Top" Width="18"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TickPlacement" Value="TopLeft">
                                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalLeft}"/>
                                <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="BottomRight">
                                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalRight}"/>
                                <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="Both">
                                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <Style x:Key="SliderStyle" TargetType="{x:Type Slider}">
                        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="Foreground" Value="{StaticResource SliderThumb.Static.Foreground}"/>
                        <Setter Property="Template" Value="{StaticResource SliderHorizontal}"/>
                        <Style.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="Template" Value="{StaticResource SliderVertical}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>

                <!--<ResourceDictionary Source="../Widget/DlgBase.xaml"/>-->
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>
