<Page x:Class="LeYun.View.PathProjectPage"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewmodel="clr-namespace:LeYun.ViewModel"
        xmlns:custom="clr-namespace:WPFCustomControls;assembly=WPFCustomControls"
        xmlns:model="clr-namespace:LeYun.Model"
        xmlns:local="clr-namespace:LeYun.View"
        xmlns:commonconverter="clr-namespace:LeYun.Model.CommonConverter"
        mc:Ignorable="d"
        x:Name="page"
        d:DesignHeight="800" d:DesignWidth="1500">

    <Page.Resources>
        <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource ScrollBarStyle}"/>
        <Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource ContextMenuStyle}"/>
        <viewmodel:RulerWidthConverter x:Key="rulerWidthConverter"/>
    </Page.Resources>

    <!--右边内容区-->
    <Grid Grid.Column="1">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="10*"/>
        </Grid.RowDefinitions>

        <!--计算操作区域-->
        <custom:FloatingCard Grid.Row="0"/>
        <Grid Grid.Row="0">
            <Border Grid.Row="0" Background="White" BorderBrush="#d6d7d9"/>
            <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="15 15 0 15">
                <!--保存-->
                <custom:PopupExtendControl
                    IsEnabled="{Binding IsPlayingDemo, Converter={StaticResource BoolNotConverter}}">
                    <custom:PopupExtendControl.HostContent>
                        <Button x:Name="save" Style="{StaticResource ButtonStyle}" Width="100" Height="30">
                            <Button.Visibility>
                                <Binding Path="IsPlaying">

                                </Binding>
                            </Button.Visibility>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf0c7;"/>
                                <TextBlock Grid.Column="1" Style="{StaticResource CenterAlignTextBlock}" Text="保存" FontSize="12" Margin="10 0 0 0"/>
                            </Grid>
                        </Button>
                    </custom:PopupExtendControl.HostContent>
                    <custom:PopupExtendControl.PopupContent>
                        <Border Background="White" BorderThickness="1 0 1 1" BorderBrush="#387cdf" Width="100">
                            <Grid >
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Button Grid.Row="0" Style="{StaticResource ButtonStyle}" Content="保存车辆" Margin="5 5 5 5" FontSize="12" Width="Auto" Height="25"
                                    Command="{Binding SaveCarCommand}"/>
                                <Button Grid.Row="1" Style="{StaticResource ButtonStyle}" Content="保存节点" Margin="5 0 5 5" FontSize="12" Width="Auto" Height="25"
                                    Command="{Binding SaveNodeCommand}"/>
                                <Button Grid.Row="2" Style="{StaticResource ButtonStyle}" Content="保存结果" Margin="5 0 5 5" FontSize="12" Width="Auto" Height="25"
                                    Command="{Binding SaveResultCommand}"/>
                            </Grid>
                        </Border>
                    </custom:PopupExtendControl.PopupContent>
                </custom:PopupExtendControl>
                
                <!--设置运行参数-->
                <Button Style="{StaticResource ButtonStyle}" Width="100" Height="30" Command="{Binding SetRunParamCommand}" Margin="10 0 0 0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf013;"/>
                        <TextBlock Grid.Column="1" Style="{StaticResource CenterAlignTextBlock}" Text="运行参数" FontSize="12" Margin="10 0 0 0"/>
                    </Grid>
                </Button>
                
                <!--设置算法参数-->
                <Button x:Name="setAlgoParam" Style="{StaticResource ButtonStyle}" Width="100" Height="30" Margin="10 0 0 0" 
                    CommandParameter="{Binding ElementName=ModeChoose, Path=SelectedIndex}"
                    Command="{Binding SetAlgoParamCommand}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf013;"/>
                        <TextBlock Grid.Column="1" Style="{StaticResource CenterAlignTextBlock}" Text="算法参数" FontSize="12" Margin="10 0 0 0"/>
                    </Grid>
                </Button>
                
                <!--动画演示-->
                <Button Style="{StaticResource ButtonStyle}" Margin="10 0 0 0"
                        Command="{Binding PlayDemoCommand}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf008;"/>
                        <TextBlock Grid.Column="1" Style="{StaticResource CenterAlignTextBlock}" Text="动画演示" FontSize="12" Margin="10 0 0 0"/>
                    </Grid>
                </Button>
            </StackPanel>
            <StackPanel Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0 15 15 15">
                <!--计算模式选择-->
                <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="计算模式：" FontSize="12" Foreground="Black"/>
                <ComboBox x:Name="ModeChoose" Style="{StaticResource ComboBoxStyle}" Width="120" Margin="0" 
                     FontSize="12" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Background="White" SelectedIndex="1"
                          IsEnabled="{Binding IsPlayingDemo, Converter={StaticResource notConverter}}"
                          viewmodel:ComboBoxBehavior.SelectionChangedCommand="{Binding ModeChangeCommand}">
                    <TextBlock  Text="时间优先"/>
                    <TextBlock  Text="车辆数优先"/>
                    <TextBlock  Text="自定义设置"/>
                </ComboBox>
                
                <!--添加车辆-->
                <custom:PopupExtendControl
                    IsEnabled="{Binding IsPlayingDemo, Converter={StaticResource BoolNotConverter}}">
                    <custom:PopupExtendControl.HostContent>
                        <Button x:Name="AddVehicleButton" Style="{StaticResource ButtonStyle}" Width="100" Height="30" Margin="10 0 0 0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf0d1;"/>
                                <TextBlock Grid.Column="1" Style="{StaticResource CenterAlignTextBlock}" Text="添加车辆" FontSize="12" Margin="10 0 0 0"/>
                            </Grid>
                        </Button>
                    </custom:PopupExtendControl.HostContent>
                    <custom:PopupExtendControl.PopupContent >
                        <Border Background="White" BorderThickness="1 0 1 1" BorderBrush="#387cdf" Width="100">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Button Grid.Row="0" Style="{StaticResource ButtonStyle}" Content="手动输入" Margin="5 5 5 5" FontSize="12" Width="Auto" Height="25"
                            Command="{Binding AddCarCommand}"/>
                                <Button Grid.Row="1" Style="{StaticResource ButtonStyle}" Content="文件导入" Margin="5 0 5 5" FontSize="12" Width="Auto" Height="25"
                            Command="{Binding ImportCarsFromFileCommand}"/>
                            </Grid>
                        </Border>
                    </custom:PopupExtendControl.PopupContent>
                </custom:PopupExtendControl>

                <!--添加节点-->
                <custom:PopupExtendControl
                    IsEnabled="{Binding IsPlayingDemo, Converter={StaticResource BoolNotConverter}}">
                    <custom:PopupExtendControl.HostContent>
                        <Button x:Name="AddPointButton" Style="{StaticResource ButtonStyle}" Width="100" Height="30" Margin="10 0 10 0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf041;"/>
                                <TextBlock Grid.Column="1" Style="{StaticResource CenterAlignTextBlock}" Text="添加节点" FontSize="12" Margin="10 0 0 0"/>
                            </Grid>
                        </Button>
                    </custom:PopupExtendControl.HostContent>
                    <custom:PopupExtendControl.PopupContent>
                        <Border Background="White" BorderThickness="1 0 1 1" BorderBrush="#387cdf" Width="100">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Button Grid.Row="0" Style="{StaticResource ButtonStyle}" Content="手动输入" Margin="5 5 5 5" FontSize="12" Width="Auto" Height="25"
                            Command="{Binding AddNodeCommand}"/>
                                <Button Grid.Row="1" Style="{StaticResource ButtonStyle}" Content="文件导入" Margin="5 0 5 5" FontSize="12" Width="Auto" Height="25"
                            Command="{Binding ImportNodesFromFileCommand}"/>
                            </Grid>
                        </Border>
                    </custom:PopupExtendControl.PopupContent>
                </custom:PopupExtendControl>
                
                <!--清空-->
                <Button x:Name="ClearButton" Style="{StaticResource ButtonStyle}" Width="100" Height="30" Margin="0 0 10 0" Command="{Binding ClearCommand}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf1f8;"/>
                        <TextBlock Grid.Column="1" Style="{StaticResource CenterAlignTextBlock}" Text="清空" FontSize="12" Margin="10 0 0 0"/>
                    </Grid>
                </Button>
                
                <!--开始计算-->
                <Button x:Name="StartButton" Style="{StaticResource ButtonStyle}" Width="100" Height="30" Command="{Binding SolveCommand}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf04b;"/>
                        <TextBlock Grid.Column="1" Style="{StaticResource CenterAlignTextBlock}" Text="开始计算" FontSize="12" Margin="10 0 0 0"/>
                    </Grid>
                </Button>
            </StackPanel>
        </Grid>
        
        <!--演示时在操作区域显示时间-->
        <!--Visibility="{Binding IsPlayingDemo, Converter={StaticResource isVisibleConverter}}"-->
        <Grid Grid.Row="0" Background="#666666">
            <Grid.Visibility>
                <MultiBinding>
                    <MultiBinding.Converter>
                        <commonconverter:BoolAndConverter >
                            <commonconverter:BoolAndConverter.ResultConverter>
                                <commonconverter:BoolToVisibility />
                            </commonconverter:BoolAndConverter.ResultConverter>
                        </commonconverter:BoolAndConverter>
                    </MultiBinding.Converter>
                    <Binding Path="IsPlayingDemo"/>
                    <Binding Path="(model:GlobalData.ShowProgressDuringDemo)"/>
                </MultiBinding>
            </Grid.Visibility>
            <custom:ProgressBar Foreground="#ff7573" Background="#666666" EnableAnimation="False" 
                                Value="{Binding CurrentDemoProgress.Value}"/>

            <!--<StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf017;" Foreground="White" FontSize="50"/>
                <TextBlock Style="{StaticResource CenterAlignTextBlock}" Foreground="White" FontSize="30" Margin="20 0 0 0" Text="配送时间："/>
                <TextBlock Style="{StaticResource CenterAlignTextBlock}" Foreground="White" FontSize="30"
                        Text="{Binding CurrentTime.Value, StringFormat={}{0:F2} min}"/>
            </StackPanel>-->

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Right">
                    <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf017;" Foreground="White" FontSize="50"/>
                    <TextBlock Style="{StaticResource CenterAlignTextBlock}" Foreground="White" FontSize="30" Margin="20 0 0 0" Text="配送时间："/>
                </StackPanel>
                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Left">
                    <TextBlock Style="{StaticResource CenterAlignTextBlock}" Foreground="White" FontSize="30"
                        Text="{Binding CurrentTime.Value, StringFormat={}{0:F2} min}"/>
                </StackPanel>
            </Grid>

        </Grid>
        

        <!--计算显示区域-->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="275"/>
                <!--275-->
            </Grid.ColumnDefinitions>

            <custom:FloatingCard Grid.Column="0" Margin="15 15 0 15"/>
            <Grid Grid.Column="0">
                <!--<Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>-->
                
                
                <!--背景图片-->
                <Grid Grid.Row="0" Grid.RowSpan="2">
                    <Image Source="pack://application:,,,/Img/map.png" Stretch="Fill" Opacity="0.5" Margin="15 15 0 15"/>
                </Grid>
                

                <!--线条画布-->
                <ItemsControl Name="myItemsControl" ItemsSource="{Binding Record.Segments}" Margin="15 15 0 15">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas ClipToBounds="True" Background="Transparent"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <!--<Line X1="{Binding X1}" Y1="{Binding Y1}" X2="{Binding X2}" Y2="{Binding Y2}" Stroke="Black" StrokeThickness="2.5"/>-->
                            <Line Stroke="{Binding Stroke}" StrokeThickness="{Binding Path=(model:GlobalData.LineThickness), UpdateSourceTrigger=PropertyChanged}">
                                <Line.X1>
                                    <MultiBinding Converter="{StaticResource nodeButtonXConverter}">
                                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}"/>
                                        <Binding Path="X1"/>
                                        <Binding Path="(model:GlobalData.MaxNodeX)"/>
                                    </MultiBinding>
                                </Line.X1>
                                <Line.Y1>
                                    <MultiBinding Converter="{StaticResource nodeButtonYConverter}">
                                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}"/>
                                        <Binding Path="Y1"/>
                                        <Binding Path="(model:GlobalData.MaxNodeY)"/>
                                    </MultiBinding>
                                </Line.Y1>
                                <Line.X2>
                                    <MultiBinding Converter="{StaticResource nodeButtonXConverter}">
                                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}"/>
                                        <Binding Path="X2"/>
                                        <Binding Path="(model:GlobalData.MaxNodeX)"/>
                                    </MultiBinding>
                                </Line.X2>
                                <Line.Y2>
                                    <MultiBinding Converter="{StaticResource nodeButtonYConverter}">
                                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}"/>
                                        <Binding Path="Y2"/>
                                        <Binding Path="(model:GlobalData.MaxNodeY)"/>
                                    </MultiBinding>
                                </Line.Y2>
                            </Line>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Canvas.Left" Value="0"/>
                            <Setter Property="Canvas.Top" Value="0"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>

                <!--节点画布-->
                <ItemsControl Grid.Column="0" x:Name="canvas" Background="Transparent" ItemsSource="{Binding Record.Nodes}" Margin="15 15 0 15">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas ClipToBounds="True" Background="Transparent" 
                                    viewmodel:MouseBehavior.MouseLeftButtonDownCommand="{Binding MouseAddNodeCommand}"
                                    viewmodel:SizeObserver.Observe="True"
                                    viewmodel:SizeObserver.ObservedWidth="{Binding CanvasWidth, Mode=OneWayToSource}"
                                    viewmodel:SizeObserver.ObservedHeight="{Binding CanvasHeight, Mode=OneWayToSource}"
                                    viewmodel:MouseObserver.Observe="True"
                                    viewmodel:MouseObserver.MouseX="{Binding MouseX, Mode=OneWayToSource}"
                                    viewmodel:MouseObserver.MouseY="{Binding MouseY, Mode=OneWayToSource}"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="{x:Type ContentPresenter}">
                            <Setter Property="Canvas.Left">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource nodeButtonXConverter}">
                                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}"/>
                                        <Binding Path="X"/>
                                        <Binding Path="(model:GlobalData.MaxNodeX)"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Canvas.Top">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource nodeButtonYConverter}">
                                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}"/>
                                        <Binding Path="Y"/>
                                        <Binding Path="(model:GlobalData.MaxNodeY)"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ItemsControl.ItemContainerStyle>

                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <!--viewmodel:ThumbBehavior.DragDeltaCommand="{Binding ElementName=page, Path=DataContext.NodeDragCommand}-->
                            <Thumb x:Name="btn" Style="{StaticResource NodeButtonStyle}" AllowDrop="True"
                                    Tag="{Binding ElementName=page}"
                                    Width="{Binding Path=(model:GlobalData.NodeButtonWidth), UpdateSourceTrigger=PropertyChanged}"
                                    Height="{Binding Path=(model:GlobalData.NodeButtonWidth), UpdateSourceTrigger=PropertyChanged}"
                                    viewmodel:ThumbBehavior.DragDeltaCommand="{Binding ElementName=page, Path=DataContext.NodeDragCommand}">
                                <!--<i:Interaction.Triggers>
                                    <i:EventTrigger EventName="DragDelta">
                                        <i:InvokeCommandAction Command="{Binding ElementName=page, Path=DataContext.NodeDragCommand}"
                                                               CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Thumb}}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>-->
                                <Thumb.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="编辑"
                                                  Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}, Path=PlacementTarget.Tag.DataContext.EditNodeCommand}"
                                                  CommandParameter="{Binding ID}"/>
                                        <MenuItem Header="删除"
                                                  Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}, Path=PlacementTarget.Tag.DataContext.RemoveNodeCommand}"
                                                  CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}, Path=PlacementTarget.DataContext.ID}"/>
                                    </ContextMenu>
                                </Thumb.ContextMenu>
                                <Thumb.Margin>
                                    <MultiBinding Converter="{StaticResource nodeButtonMarginConverter}">
                                        <Binding ElementName="btn" Path="ActualWidth"/>
                                        <Binding ElementName="btn" Path="ActualHeight"/>
                                    </MultiBinding>
                                </Thumb.Margin>
                                <Thumb.Background>
                                    <MultiBinding Converter="{StaticResource nodeButtonColorConverter}">
                                        <Binding Path="ID"/>
                                        <Binding ElementName="page" Path="DataContext.CurrentNodeIndex"/>
                                    </MultiBinding>
                                </Thumb.Background>
                            </Thumb>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                
                <!--图例-->
                <!--<custom:FloatingCard Grid.Row="1"  Margin="15 0 0 15"/>-->
                <Grid Grid.Row="0" Margin="15 0 0 15" VerticalAlignment="Bottom" IsHitTestVisible="False">
                    <StackPanel Orientation="Horizontal" Margin="20 10 0 10">
                        <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="图例：" FontSize="14"/>
                        <StackPanel Orientation="Horizontal" Margin="30 0 0 0">
                            <Border Background="#dd5145" Width="15" Height="15" CornerRadius="20"/>
                            <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="配送中心" FontSize="14" Margin="5 0 0 0"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="30 0 0 0">
                            <Border Background="#387cdf" Width="15" Height="15" CornerRadius="20"/>
                            <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="普通节点" FontSize="14" Margin="5 0 0 0"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="30 0 0 0">
                            <Border Background="#ffbd39" Width="15" Height="15" CornerRadius="20"/>
                            <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="当前选中节点" FontSize="14" Margin="5 0 0 0"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="50 0 0 0">
                            <Border Height="5" BorderBrush="Black" BorderThickness="1 0 1 1" Margin="0 5 0 0">
                                <Border.Width>
                                    <MultiBinding Converter="{StaticResource rulerWidthConverter}">
                                        <Binding ElementName="canvas" Path="ActualWidth"/>
                                        <Binding Path="(model:GlobalData.MaxNodeX)"/>
                                    </MultiBinding>
                                </Border.Width>
                            </Border>
                            <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="1km" FontSize="14" Margin="5 0 0 0"/>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </Grid>

            <!--车辆和配送点列表-->
            <Border Grid.Column="1"/>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>

                <!--配送点数据栏-->
                <custom:FloatingCard Grid.Row="0" Margin="15"/>
                <Grid Grid.Row="0" Margin="15">
                    <custom:AutoScrollListView x:Name="NodesList" Grid.Row="0" ItemContainerStyle="{StaticResource ListViewItemStyle}" ScrollViewer.CanContentScroll="False" BorderThickness="0" Margin="10"
                          ItemsSource="{Binding Record.Nodes}" SelectionMode="Single" SelectedIndex="{Binding CurrentNodeIndex}">
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem x:Name="AddNode" Header="添加" Command="{Binding AddNodeCommand}"/>
                                <MenuItem x:Name="EditNode" Header="编辑" 
                                      Command="{Binding EditNodeCommand}" 
                                      CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}, Path=PlacementTarget.SelectedIndex}"/>
                                <MenuItem Header="删除"
                                          Command="{Binding RemoveNodeCommand}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}, Path=PlacementTarget.SelectedIndex}"/>
                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.View>
                            <GridView ColumnHeaderContainerStyle="{StaticResource GridViewColumnHeaderStyle}">
                                <GridViewColumn Header="编号" Width="Auto"  DisplayMemberBinding="{Binding ID}"/>
                                <GridViewColumn Header="x坐标" Width="Auto" DisplayMemberBinding="{Binding X, StringFormat={}{0:F2}}" />
                                <GridViewColumn Header="y坐标" Width="Auto" DisplayMemberBinding="{Binding Y, StringFormat={}{0:F2}}"/>
                                <GridViewColumn Header="需求量" Width="Auto" DisplayMemberBinding="{Binding Demand, StringFormat={}{0:F2}}"/>
                            </GridView>
                        </ListView.View>
                    </custom:AutoScrollListView>

                </Grid>
                <!--车辆列表-->
                <custom:FloatingCard Grid.Row="1" Margin="15 0 15 15"/>
                <Grid Grid.Row="1" Margin="15 0 15 15">
                    <custom:AutoScrollListView x:Name="VehicleList" ItemContainerStyle="{StaticResource ListViewItemStyle}" Grid.Column="5" Grid.Row="2" ScrollViewer.CanContentScroll="False" BorderThickness="0" Margin="10"
                          ItemsSource="{Binding Record.Cars}" SelectionMode="Single">
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem x:Name="AddCar" Header="添加" Command="{Binding AddCarCommand}"/>
                                <MenuItem x:Name="EditCar" Header="编辑"
                                      Command="{Binding EditCarCommand}" 
                                      CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}, Path=PlacementTarget.SelectedIndex}"/>
                                <MenuItem Header="删除"
                                          Command="{Binding RemoveCarCommand}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}, Path=PlacementTarget.SelectedIndex}"/>
                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.View>
                            <GridView ColumnHeaderContainerStyle="{StaticResource GridViewColumnHeaderStyle}">
                                <GridViewColumn Header="编号" Width="Auto"  DisplayMemberBinding="{Binding ID}"/>
                                <GridViewColumn Header="最大载重" Width="Auto" DisplayMemberBinding="{Binding WeightLimit, StringFormat={}{0:F2}}" />
                                <GridViewColumn Header="最大里程" Width="Auto" DisplayMemberBinding="{Binding DisLimit, StringFormat={}{0:F2}}"/>
                            </GridView>
                        </ListView.View>
                    </custom:AutoScrollListView>

                </Grid>
            </Grid>

            <!--演示时禁用绘图面板-->
            <Grid Grid.Column="0" Background="Transparent"
                  Visibility="{Binding IsPlayingDemo, Converter={StaticResource  BoolToVisibility}}"/>

            <!--演示时禁用配送点和车辆列表-->
            <Grid Grid.Column="1" Background="Transparent"
                  Visibility="{Binding IsPlayingDemo, Converter={StaticResource  BoolToVisibility}}"/>

            <!--用于在演示时显示车辆运行时信息-->
            <!--<custom:FloatingCard Grid.Column="1" Margin="15" Background="White">
                
            </custom:FloatingCard>-->
            <Grid Grid.Column="1" Background="White" Margin="15">
                <Grid.Visibility>
                    <MultiBinding>
                        <MultiBinding.Converter>
                            <commonconverter:BoolAndConverter>
                                <commonconverter:BoolAndConverter.ResultConverter>
                                    <commonconverter:BoolToVisibility />
                                </commonconverter:BoolAndConverter.ResultConverter>
                            </commonconverter:BoolAndConverter>
                        </MultiBinding.Converter>
                        <Binding Path="IsPlayingDemo"/>
                        <Binding Path="(model:GlobalData.ShowCarRuntimeInfoDuringDemo)"/>
                    </MultiBinding>
                </Grid.Visibility>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Style="{StaticResource CenterAlignTextBlock}" Text="车辆实时信息" Margin="0 10 0 10"/>

                <DataGrid Grid.Row="1" Style="{StaticResource DataGridStyle}" Margin="10" ItemsSource="{Binding CarRuntimeInfos}">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="颜色" Width="Auto">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Border Width="15" Height="15" CornerRadius="15" Background="{Binding LineBrush}" Margin="20 0 20 0"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="编号" Width="Auto">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding ID}" Margin="20 0 20 0"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="配送进度" Width="*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <StackPanel x:Name="running" Orientation="Horizontal">
                                            <TextBlock Text="&#xf110;" FontSize="14">
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource IconTextBlock}">
                                                        <Setter Property="RenderTransformOrigin" Value="0.5 0.5"/>
                                                        <Setter Property="RenderTransform">
                                                            <Setter.Value>
                                                                <TransformGroup>
                                                                    <RotateTransform  Angle="0"/>
                                                                </TransformGroup>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <EventTrigger RoutedEvent="Loaded">
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation From="0" To="360" RepeatBehavior="Forever" Duration="0:0:2" Storyboard.TargetProperty="(RenderTransform).(TransformGroup.Children)[0].(Angle)"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </EventTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                            <TextBlock Style="{StaticResource CenterAlignTextBlock}" FontSize="14" Margin="5 0 0 0"
                                                       Text="{Binding CompletedPercent, Converter={StaticResource times100}, StringFormat={}{0:F0}%}"/>
                                        </StackPanel>
                                        <StackPanel x:Name="finished" Orientation="Horizontal">
                                            <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf00c;" Foreground="#1d9d73" FontSize="14"/>
                                            <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="已完成" Margin="5 0 0 0" FontSize="14"/>
                                        </StackPanel>
                                    </Grid>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsFinished}" Value="True">
                                            <Setter TargetName="running" Property="Visibility" Value="Hidden"/>
                                            <Setter TargetName="finished" Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsFinished}" Value="False">
                                            <Setter TargetName="running" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="finished" Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>

                <!--<ItemsControl ItemsSource="{Binding CarRuntimeInfos}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" Margin="10 15 10 0">
                                <Border Width="30" BorderBrush="{Binding LineBrush}" BorderThickness="0 0 0 2" VerticalAlignment="Center"/>
                                <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="车辆" Margin="10 0 0 0"/>
                                <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="{Binding ID}" Margin="10 0 0 0"/>
                                --><!--<TextBlock x:Name="running" Style="{StaticResource CenterAlignTextBlock}" Text="配送中..." Margin="10 0 0 0"/>--><!--
                                <StackPanel x:Name="running" Orientation="Horizontal" Margin="10 0 0 0">
                                    <TextBlock Text="&#xf110;">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource IconTextBlock}">
                                                <Setter Property="RenderTransformOrigin" Value="0.5 0.5"/>
                                                <Setter Property="RenderTransform">
                                                    <Setter.Value>
                                                        <TransformGroup>
                                                            <RotateTransform  Angle="0"/>
                                                        </TransformGroup>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <EventTrigger RoutedEvent="Loaded">
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation From="0" To="360" RepeatBehavior="Forever" Duration="0:0:1" Storyboard.TargetProperty="(RenderTransform).(TransformGroup.Children)[0].(Angle)"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="配送中" Margin="5 0 0 0"/>
                                </StackPanel>
                                <StackPanel x:Name="finished" Orientation="Horizontal" Margin="10 0 0 0">
                                    <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf00c;" Foreground="#1d9d73" />
                                    <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="已完成" Margin="5 0 0 0"/>
                                </StackPanel>
                            </StackPanel>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsFinished}" Value="True">
                                    <Setter TargetName="running" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="finished" Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsFinished}" Value="False">
                                    <Setter TargetName="running" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="finished" Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>-->
            </Grid>

        </Grid>
    </Grid>
</Page>
