<Page x:Class="LeYun.View.SettingPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:LeYun.View" xmlns:custom="clr-namespace:WPFCustomControls;assembly=WPFCustomControls" xmlns:viewmodel="clr-namespace:LeYun.ViewModel"
      mc:Ignorable="d" 
      d:DesignHeight="868" d:DesignWidth="1454"
      xmlns:model="clr-namespace:LeYun.Model"
      x:Name="page" Background="White">

    <Page.Resources>
        <viewmodel:ActiveVisibleConverter x:Key="activeVisibleConverter"/>
        <viewmodel:LineWidthConverter x:Key="lineWidthConverter"/>
        <viewmodel:ErrorTipVisibilityConverter x:Key="errorTipVisibilityConverter"/>
        <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource ScrollBarStyle}"/>
        <!--<Style x:Key="TabRadioButtonStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border x:Name="border" Background="Transparent" BorderBrush="#e5e5e5" BorderThickness="0 0 0 1">
                            <Grid>
                                <ContentPresenter Margin="10 15 10 15" HorizontalAlignment="Left"/>
                                <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf054;" HorizontalAlignment="Right" Margin="0 0 10 0"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#e5e5e5"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#d0d0d0"/>
                                --><!--<Setter Property="Foreground" Value="White"/>--><!--
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
    </Page.Resources>

    <!--<Grid Margin="50 50 0 50">
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Border Grid.Column="0" BorderBrush="Gray" BorderThickness="0 0 1 0" Margin="0 0 50 0"/>
        <Grid Grid.Column="0">
            <StackPanel>
                --><!--画布元素--><!--
                <StackPanel>
                    <TextBlock Style="{StaticResource CenterAlignTextBlock}" HorizontalAlignment="Left" FontSize="22" Text="画布元素"/>
                    <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                        <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="路径线条粗细："/>
                        <Slider x:Name="lineThickness" Style="{StaticResource SliderStyle}" Width="200" Minimum="1" Maximum="5" 
                                Value="{Binding Path=(model:GlobalData.LineThickness)}"/>
                        <Border Width="50" BorderBrush="Black" VerticalAlignment="Center" Margin="10 0 0 0"
                                BorderThickness="{Binding ElementName=lineThickness, Path=Value, Converter={StaticResource lineWidthConverter}}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                        <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="节点按钮直径："/>
                        <Slider x:Name="buttonWidth" Style="{StaticResource SliderStyle}" Width="200" Minimum="10" Maximum="20" 
                            Value="{Binding Path=(model:GlobalData.NodeButtonWidth)}"/>
                        <Thumb Style="{StaticResource NodeButtonStyle}" Margin="10 0 0 0"
                            Width="{Binding ElementName=buttonWidth, Path=Value}"
                            Height="{Binding ElementName=buttonWidth, Path=Value}"/>
                    </StackPanel>
                </StackPanel>
                --><!--坐标范围--><!--
                <StackPanel Margin="0 50 0 0">
                    <TextBlock Style="{StaticResource CenterAlignTextBlock}" HorizontalAlignment="Left" FontSize="22" Text="坐标范围"/>
                    <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                        <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf071;" Foreground="#387cdf"/>
                        <TextBlock Style="{StaticResource CenterAlignTextBlock}" Margin="10 0 0 0" Text="超出坐标范围的节点不会显示在画布上"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                        <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="X坐标范围：0 — "/>
                        <TextBox x:Name="xRange" Style="{StaticResource TextBoxStyle}" Width="100" TextAlignment="Center" Background="Transparent"
                                 viewmodel:AutoSelectBehavior.AutoSelectOnFocus="True">
                            <TextBox.Text>
                                <Binding Path="(model:GlobalData.MaxNodeX)" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <viewmodel:NodeMaxXValidationRule />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <StackPanel Orientation="Horizontal" Margin="10 0 0 0" 
                            Visibility="{Binding ElementName=xRange, Path=ToolTip, Converter={StaticResource errorTipVisibilityConverter}}">
                            <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf057;" Foreground="#dd4f43"/>
                            <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="{Binding ElementName=xRange, Path=ToolTip}" Foreground="#838383" Margin="5"/>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                        <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="Y坐标范围：0 — "/>
                        <TextBox x:Name="yRange" Style="{StaticResource TextBoxStyle}" Width="100" TextAlignment="Center" Background="Transparent"
                                 viewmodel:AutoSelectBehavior.AutoSelectOnFocus="True">
                            <TextBox.Text>
                                <Binding Path="(model:GlobalData.MaxNodeY)" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <viewmodel:NodeMaxYValidationRule />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <StackPanel Orientation="Horizontal" Margin="10 0 0 0" 
                                Visibility="{Binding ElementName=yRange, Path=ToolTip, Converter={StaticResource errorTipVisibilityConverter}}">
                            <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf057;" Foreground="#dd4f43"/>
                            <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="{Binding ElementName=yRange, Path=ToolTip}" Foreground="#838383" Margin="5"/>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
                --><!--存储--><!--
                <StackPanel Margin="0 50 0 0">
                    <TextBlock Style="{StaticResource CenterAlignTextBlock}" HorizontalAlignment="Left" FontSize="22" Text="记录文件存储路径"/>
                    <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                        <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf071;" Foreground="#387cdf"/>
                        <TextBlock Style="{StaticResource CenterAlignTextBlock}" Margin="10 0 0 0" Text="改变存储路径后，原来的历史记录文件会移动到新文件夹"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                        <TextBox Style="{StaticResource TextBoxStyle}" Width="300" Background="Transparent" IsReadOnly="True"
                         Text="{Binding Path=(model:GlobalData.RecordPath)}"/>
                        <Button Style="{StaticResource ButtonStyle}" Margin="20 0 0 0" Content="更改"
                        Command="{Binding ChangeRecordLocationCommand}"/>
                    </StackPanel>
                    <Button Style="{StaticResource ButtonStyle}" Content="清空历史记录" Margin="0 20 0 0" HorizontalAlignment="Left"
                            Command="{Binding ClearHistoryCommand}"/>
                </StackPanel>
            </StackPanel>
        </Grid>
        <Grid Grid.Column="1" Margin="0 0 0 0">
            <StackPanel>
                --><!--动画演示--><!--
                <StackPanel>
                    <TextBlock Style="{StaticResource CenterAlignTextBlock}" HorizontalAlignment="Left" FontSize="22" Text="动画演示"/>
                    <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                        <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf071;" Foreground="#387cdf"/>
                        <TextBlock Style="{StaticResource CenterAlignTextBlock}" Margin="10 0 0 0" Text="实际演示时长取决于电脑配置"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                        <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="演示时长："/>
                        <TextBox x:Name="duration" Style="{StaticResource TextBoxStyle}" Width="100" Background="Transparent" TextAlignment="Center"
                                 viewmodel:AutoSelectBehavior.AutoSelectOnFocus="True">
                            <TextBox.Text>
                                <Binding Path="(model:GlobalData.DemoDuration)" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <viewmodel:DemoDurationValidationRule />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="s" Margin="5 0 0 0"/>
                        <StackPanel Orientation="Horizontal" Margin="10 0 0 0" 
                                Visibility="{Binding ElementName=duration, Path=ToolTip, Converter={StaticResource errorTipVisibilityConverter}}">
                            <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf057;" Foreground="#dd4f43"/>
                            <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="{Binding ElementName=duration, Path=ToolTip}" Foreground="#838383" Margin="5"/>
                        </StackPanel>
                    </StackPanel>
                    <ToggleButton Margin="0 20 0 0" Style="{StaticResource ToggleButtonStyle}" Content="演示时显示车辆实时信息"
                              IsChecked="{Binding Path=(model:GlobalData.ShowCarRuntimeInfoDuringDemo)}"/>
                    <ToggleButton Margin="0 10 0 0" Style="{StaticResource ToggleButtonStyle}" Content="演示时显示配送进度"
                              IsChecked="{Binding Path=(model:GlobalData.ShowProgressDuringDemo)}"/>
                    <ToggleButton Margin="0 10 0 0" Style="{StaticResource ToggleButtonStyle}" Content="演示结束后弹出提示"
                              IsChecked="{Binding Path=(model:GlobalData.PopupAfterDemo)}"/>
                </StackPanel>
                --><!--其它设置-->
                <!--<StackPanel Margin="0 50 0 0">
                    <TextBlock Style="{StaticResource CenterAlignTextBlock}" HorizontalAlignment="Left" FontSize="22" Text="其它设置"/>
                    <ToggleButton Margin="0 20 0 0" Style="{StaticResource ToggleButtonStyle}" Content="启用动画效果"
                              />
                    <Button Style="{StaticResource ButtonStyle}" Content="恢复默认设置" HorizontalAlignment="Left" Margin="0 20 0 0"
                            Command="{Binding RestoreDefaultCommand}"/>
                </StackPanel>--><!--
                <Button Style="{StaticResource ButtonStyle}" Content="恢复默认设置" HorizontalAlignment="Left" Margin="0 50 0 0"
                            Command="{Binding RestoreDefaultCommand}"/>
                --><!--软件激活--><!--
                <StackPanel Margin="0 50 0 0"
                            Visibility="{Binding Path=(model:GlobalData.IsActive), Converter={StaticResource activeVisibleConverter}}">
                    <TextBlock Style="{StaticResource CenterAlignTextBlock}" HorizontalAlignment="Left" FontSize="22" Text="软件激活"/>
                    <TextBlock Margin="0 20 0 0" Style="{StaticResource CenterAlignTextBlock}" Text="当前软件版本为试用版" HorizontalAlignment="Left"/>
                    <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                        <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf071;" Foreground="#387cdf"/>
                        <TextBlock Style="{StaticResource CenterAlignTextBlock}" Margin="10 0 0 0" Text="试用版不包含动画演示、车辆详情和历史记录搜索功能，且包含广告"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                        <TextBox x:Name="key" Style="{StaticResource TextBoxStyle}" Width="300" Background="Transparent" Text="XXX-XXX-XXX"/>
                        <Button Style="{StaticResource ButtonStyle}" Margin="20 0 0 0" 
                            Content="激活"
                            Command="{Binding ActivateCommand}"
                            CommandParameter="{Binding ElementName=key, Path=Text}"/>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </Grid>
    </Grid>-->

    <!--<Grid Margin="50">
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left">
            <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="坐标范围" FontWeight="Bold" HorizontalAlignment="Left"/>
            <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="X坐标范围：0 — "/>
                <TextBox x:Name="xRange" Style="{StaticResource TextBoxStyle}" Width="100" TextAlignment="Center" Background="Transparent"
                                 viewmodel:AutoSelectBehavior.AutoSelectOnFocus="True">
                    <TextBox.Text>
                        <Binding Path="(model:GlobalData.MaxNodeX)" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <viewmodel:NodeMaxXValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <StackPanel Orientation="Horizontal" Margin="10 0 0 0" 
                            Visibility="{Binding ElementName=xRange, Path=ToolTip, Converter={StaticResource errorTipVisibilityConverter}}">
                    <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf057;" Foreground="#dd4f43"/>
                    <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="{Binding ElementName=xRange, Path=ToolTip}" Foreground="#838383" Margin="5"/>
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="Y坐标范围：0 — "/>
                <TextBox x:Name="yRange" Style="{StaticResource TextBoxStyle}" Width="100" TextAlignment="Center" Background="Transparent"
                                 viewmodel:AutoSelectBehavior.AutoSelectOnFocus="True">
                    <TextBox.Text>
                        <Binding Path="(model:GlobalData.MaxNodeY)" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <viewmodel:NodeMaxYValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <StackPanel Orientation="Horizontal" Margin="10 0 0 0" 
                                Visibility="{Binding ElementName=yRange, Path=ToolTip, Converter={StaticResource errorTipVisibilityConverter}}">
                    <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf057;" Foreground="#dd4f43"/>
                    <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="{Binding ElementName=yRange, Path=ToolTip}" Foreground="#838383" Margin="5"/>
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf071;" Foreground="#387cdf"/>
                <TextBlock Style="{StaticResource CenterAlignTextBlock}" Margin="10 0 0 0" Text="超出坐标范围的节点不会显示在画布上"/>
            </StackPanel>
        </StackPanel>
        <StackPanel Grid.Row="0" Grid.Column="1" HorizontalAlignment="Left">
            <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="画布元素" FontWeight="Bold" HorizontalAlignment="Left"/>
            <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="线条粗细："/>
                <Slider x:Name="lineThickness" Style="{StaticResource SliderStyle}" Width="200" Minimum="1" Maximum="5" 
                                Value="{Binding Path=(model:GlobalData.LineThickness)}"/>
                <Grid Width="50">
                    <Border Height="{Binding ElementName=lineThickness, Path=ActualHeight}" BorderBrush="Black" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10 0 0 0"
                                BorderThickness="{Binding ElementName=lineThickness, Path=Value, Converter={StaticResource lineWidthConverter}}"/>
                </Grid>
               
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="节点直径："/>
                <Slider x:Name="buttonWidth" Style="{StaticResource SliderStyle}" Width="200" Minimum="10" Maximum="20" 
                            Value="{Binding Path=(model:GlobalData.NodeButtonWidth)}"/>
                <Grid Width="50">
                    <Thumb Style="{StaticResource NodeButtonStyle}" Margin="10 0 0 0"
                            Width="{Binding ElementName=buttonWidth, Path=Value}"
                            Height="{Binding ElementName=buttonWidth, Path=Value}"/>
                </Grid>
            </StackPanel>
        </StackPanel>
        <StackPanel Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left">
            <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="动画演示" FontWeight="Bold" HorizontalAlignment="Left"/>
            <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="演示时长："/>
                <TextBox x:Name="duration" Style="{StaticResource TextBoxStyle}" Width="100" Background="Transparent" TextAlignment="Center"
                                 viewmodel:AutoSelectBehavior.AutoSelectOnFocus="True">
                    <TextBox.Text>
                        <Binding Path="(model:GlobalData.DemoDuration)" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <viewmodel:DemoDurationValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="s" Margin="5 0 0 0"/>
                <StackPanel Orientation="Horizontal" Margin="10 0 0 0" 
                                Visibility="{Binding ElementName=duration, Path=ToolTip, Converter={StaticResource errorTipVisibilityConverter}}">
                    <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf057;" Foreground="#dd4f43"/>
                    <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="{Binding ElementName=duration, Path=ToolTip}" Foreground="#838383" Margin="5"/>
                </StackPanel>
            </StackPanel>
            <ToggleButton Margin="0 20 0 0" Style="{StaticResource ToggleButtonStyle}" Content="演示时显示车辆实时信息"
                              IsChecked="{Binding Path=(model:GlobalData.ShowCarRuntimeInfoDuringDemo)}"/>
            <ToggleButton Margin="0 10 0 0" Style="{StaticResource ToggleButtonStyle}" Content="演示时显示配送进度"
                              IsChecked="{Binding Path=(model:GlobalData.ShowProgressDuringDemo)}"/>
            <ToggleButton Margin="0 10 0 0" Style="{StaticResource ToggleButtonStyle}" Content="演示结束后弹出提示"
                              IsChecked="{Binding Path=(model:GlobalData.PopupAfterDemo)}"/>
            <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf071;" Foreground="#387cdf"/>
                <TextBlock Style="{StaticResource CenterAlignTextBlock}" Margin="10 0 0 0" Text="实际演示时长取决于电脑配置"/>
            </StackPanel>
        </StackPanel>
        <StackPanel Grid.Row="1" Grid.Column="1">
            <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="通用设置" FontWeight="Bold" HorizontalAlignment="Left"/>
            <Button Style="{StaticResource ButtonStyle}" Content="清空历史记录" Margin="0 20 0 0" HorizontalAlignment="Left"
                            Command="{Binding ClearHistoryCommand}"/>
            <Button Style="{StaticResource ButtonStyle}" Content="恢复默认设置" HorizontalAlignment="Left" Margin="0 20 0 0"
                            Command="{Binding RestoreDefaultCommand}"/>
            <Button Style="{StaticResource ButtonStyle}" Content="产品功能激活" HorizontalAlignment="Left" Margin="0 20 0 0"
                    Command="{Binding ActivateCommand}"
                            />
        </StackPanel>
    </Grid>-->

    <Grid Margin="20">
        <StackPanel>
            <StackPanel Orientation="Horizontal">
                <Button Style="{StaticResource ButtonStyle}" Content="清空历史记录" HorizontalAlignment="Left"
                            Command="{Binding ClearHistoryCommand}"/>
                <Button Style="{StaticResource ButtonStyle}" Content="恢复默认设置" HorizontalAlignment="Left" Margin="10 0 0 0"
                            Command="{Binding RestoreDefaultCommand}"/>
                <Button Style="{StaticResource ButtonStyle}" Content="产品功能激活" HorizontalAlignment="Left" Margin="10 0 0 0"
                    Command="{Binding ActivateCommand}"/>
            </StackPanel>
            <StackPanel Margin="0 40 0 0">
                <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="画布元素" FontWeight="Bold" HorizontalAlignment="Left"/>
                <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                    <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="线条粗细："/>
                    <Slider x:Name="lineThickness" Style="{StaticResource SliderStyle}" Width="200" Minimum="1" Maximum="5" 
                                Value="{Binding Path=(model:GlobalData.LineThickness)}"/>
                    <Grid Width="50">
                        <Border Height="{Binding ElementName=lineThickness, Path=ActualHeight}" BorderBrush="Black" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10 0 0 0"
                                BorderThickness="{Binding ElementName=lineThickness, Path=Value, Converter={StaticResource lineWidthConverter}}"/>
                    </Grid>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                    <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="节点直径："/>
                    <Slider x:Name="buttonWidth" Style="{StaticResource SliderStyle}" Width="200" Minimum="10" Maximum="20" 
                            Value="{Binding Path=(model:GlobalData.NodeButtonWidth)}"/>
                    <Grid Width="50">
                        <Thumb Style="{StaticResource NodeButtonStyle}" Margin="10 0 0 0"
                            Width="{Binding ElementName=buttonWidth, Path=Value}"
                            Height="{Binding ElementName=buttonWidth, Path=Value}"/>
                    </Grid>
                </StackPanel>
            </StackPanel>
            <StackPanel Margin="0 40 0 0">
                <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="坐标范围" FontWeight="Bold" HorizontalAlignment="Left"/>
                <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                    <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="X坐标范围：0 — "/>
                    <TextBox x:Name="xRange" Style="{StaticResource TextBoxStyle}" Width="100" TextAlignment="Center" Background="Transparent"
                                 viewmodel:AutoSelectBehavior.AutoSelectOnFocus="True">
                        <TextBox.Text>
                            <Binding Path="(model:GlobalData.MaxNodeX)" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <viewmodel:NodeMaxXValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <StackPanel Orientation="Horizontal" Margin="10 0 0 0" 
                            Visibility="{Binding ElementName=xRange, Path=ToolTip, Converter={StaticResource errorTipVisibilityConverter}}">
                        <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf057;" Foreground="#dd4f43"/>
                        <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="{Binding ElementName=xRange, Path=ToolTip}" Foreground="#838383" Margin="5"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                    <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="Y坐标范围：0 — "/>
                    <TextBox x:Name="yRange" Style="{StaticResource TextBoxStyle}" Width="100" TextAlignment="Center" Background="Transparent"
                                 viewmodel:AutoSelectBehavior.AutoSelectOnFocus="True">
                        <TextBox.Text>
                            <Binding Path="(model:GlobalData.MaxNodeY)" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <viewmodel:NodeMaxYValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <StackPanel Orientation="Horizontal" Margin="10 0 0 0" 
                                Visibility="{Binding ElementName=yRange, Path=ToolTip, Converter={StaticResource errorTipVisibilityConverter}}">
                        <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf057;" Foreground="#dd4f43"/>
                        <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="{Binding ElementName=yRange, Path=ToolTip}" Foreground="#838383" Margin="5"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                    <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf071;" Foreground="#387cdf"/>
                    <TextBlock Style="{StaticResource CenterAlignTextBlock}" Margin="10 0 0 0" Text="超出坐标范围的节点不会显示在画布上"/>
                </StackPanel>
            </StackPanel>
            <StackPanel Margin="0 40 0 0">
                <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="动画演示" FontWeight="Bold" HorizontalAlignment="Left"/>
                <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                    <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="演示时长："/>
                    <TextBox x:Name="duration" Style="{StaticResource TextBoxStyle}" Width="100" Background="Transparent" TextAlignment="Center"
                                 viewmodel:AutoSelectBehavior.AutoSelectOnFocus="True">
                        <TextBox.Text>
                            <Binding Path="(model:GlobalData.DemoDuration)" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <viewmodel:DemoDurationValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="s" Margin="5 0 0 0"/>
                    <StackPanel Orientation="Horizontal" Margin="10 0 0 0" 
                                Visibility="{Binding ElementName=duration, Path=ToolTip, Converter={StaticResource errorTipVisibilityConverter}}">
                        <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf057;" Foreground="#dd4f43"/>
                        <TextBlock Style="{StaticResource CenterAlignTextBlock}" Text="{Binding ElementName=duration, Path=ToolTip}" Foreground="#838383" Margin="5"/>
                    </StackPanel>
                </StackPanel>
                <ToggleButton Margin="0 20 0 0" Style="{StaticResource ToggleButtonStyle}" Content="演示时显示车辆实时信息"
                              IsChecked="{Binding Path=(model:GlobalData.ShowCarRuntimeInfoDuringDemo)}"/>
                <ToggleButton Margin="0 10 0 0" Style="{StaticResource ToggleButtonStyle}" Content="演示时显示配送进度"
                              IsChecked="{Binding Path=(model:GlobalData.ShowProgressDuringDemo)}"/>
                <ToggleButton Margin="0 10 0 0" Style="{StaticResource ToggleButtonStyle}" Content="演示结束后弹出提示"
                              IsChecked="{Binding Path=(model:GlobalData.PopupAfterDemo)}"/>
                <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                    <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf071;" Foreground="#387cdf"/>
                    <TextBlock Style="{StaticResource CenterAlignTextBlock}" Margin="10 0 0 0" Text="实际演示时长取决于电脑配置"/>
                </StackPanel>
            </StackPanel>
        </StackPanel>
    </Grid>
    
</Page>
